name: Snowflake CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install snowsql
      run: |
        # Install snowsql
        curl -O https://s3.amazonaws.com/snowflake-client-releases/snowsql/1.2.20/snowsql-1.2.20-linux_x86_64.btar.gz
        tar -xvzf snowsql-1.2.20-linux_x86_64.btar.gz
        sudo ./snowsql-1.2.20-linux_x86_64/install.sh

    - name: Set Environment Variables
      env:
        ENV: ${{ github.ref_name }}
      run: |
        if [ "$ENV" == "dev" ]; then
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER_DEV }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD_DEV }}" >> $GITHUB_ENV
        elif [ "$ENV" == "qa" ]; then
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT_QA }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER_QA }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD_QA }}" >> $GITHUB_ENV
        elif [ "$ENV" == "main" ]; then
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT_MAIN }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER_MAIN }}" >> $GITHUB_ENV
          echo "SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD_MAIN }}" >> $GITHUB_ENV
        fi

    - name: Execute SQL Scripts
      run: |
        for file in ./scripts/*.sql; do
          echo "Executing $file"
          snowsql -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -p $SNOWFLAKE_PASSWORD -f $file
        done

    - name: Run Test Queries
      run: |
        for test in ./test/*.sql; do
          echo "Running test $test"
          snowsql -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -p $SNOWFLAKE_PASSWORD -f $test > test_output.txt
          grep "FAILED" test_output.txt && exit 1 || echo "Test passed"
        done

    - name: Promote Code to qa
      if: success() && github.ref_name == 'dev'
      run: |
        echo "Promoting code to qa..."
        git checkout qa
        git merge dev
        git push origin qa

    - name: Promote Code to main
      if: success() && github.ref_name == 'qa'
      run: |
        echo "Promoting code to main..."
        git checkout main
        git merge qa
        git push origin main
